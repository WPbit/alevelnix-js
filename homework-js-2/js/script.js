// 1. Последнее значение цикла
// Какое последнее значение выведет этот код? Почему?
/*
let i = 3;
while (i) {
    alert( i-- ); // Выведет 1, после уменьшит на единицу и следующее значение в условии цикла даст false и выйдет из цикла
}
*/

// 2. Даны три переменные вещественного типа: A, B, C. Если их значения упорядочены по
// возрастанию, то удвоить их; в противном случае заменить значение каждой
// переменной на противоположное. Вывести новые значения переменных A, B, C.
/*
let A = 76.99;
let B = 87.75;
let C = 91.54;
if (B > A && B < C) {
    A = A * 2;
    B = B * 2;
    C = C * 2;
    alert(`A = ${A}, B = ${B}, C = ${C}`);
} else {
    A = 0 - A;
    B = 0 - B;
    C = 0 - C;
    alert(`A = ${A}, B = ${B}, C = ${C}`);
}
*/

// 3. Даны три переменные вещественного типа: A, B, C. Если их значения упорядочены по
// возрастанию или убыванию, то удвоить их; в противном случае заменить значение
// каждой переменной на противоположное. Вывести новые значения переменных A, B, C.
/*
let A = 96.99;
let B = 87.75;
let C = 71.54;
if ((B > A && B < C) || (B < A && B > C)) {
    A = A * 2;
    B = B * 2;
    C = C * 2;
    alert(`A = ${A}, B = ${B}, C = ${C}`);
} else {
    A = 0 - A;
    B = 0 - B;
    C = 0 - C;
    alert(`A = ${A}, B = ${B}, C = ${C}`);
}
*/

// 4. На числовой оси расположены три точки: A, B, C. Определить, какая из двух последних
// точек (B или C) расположена ближе к A, и вывести эту точку и ее расстояние от точки A.
/*
let A = 1;
let B = -4;
let C = 3;
let resAB = A * B;
if (resAB < 0) {
    resAB *= -1;
}
let resAC = A * C;
if (resAC < 0) {
    resAC *= -1;
}
if (resAB < resAC) {
    alert(`Точка B ближе и на расстоянии ${B} от точки A`);
} else {
    alert(`Точка C ближе и на расстоянии ${C} от точки A`);
}
*/

// 5. Даны целочисленные координаты точки на плоскости. Если точка совпадает с началом
// координат, то вывести 0. Если точка не совпадает с начало координат, но лежит на оси
// OX или OY, то вывести соответственно 1 или 2. Если точка не лежит на координатных
// осях, то вывести 3.
/*
let A = {
    OX: 0,
    OY: 0,
};
if (A.OX === 0 && A.OY === 0) {
   console.log(0);
} else if (A.OX === 0 && A.OY !== 0) {
    console.log(1);
} else if (A.OX !== 0 && A.OY === 0) {
    console.log(2);
} else {
    console.log(3);
}
*/

// 6. Даны координаты точки, не лежащей на координатных осях OX и OY. Определить
// номер координатной четверти, в которой находится данная точка.
/*
let A = {
    OX: 3,
    OY: -2,
};
if (A.OX > 0 && A.OY > 0) {
    console.log('I');
} else if (A.OX < 0 && A.OY > 0) {
    console.log('II');
} else if (A.OX < 0 && A.OY < 0) {
    console.log('III');
} else if (A.OX > 0 && A.OY < 0) {
    console.log('IV');
}
*/

// 7. Даны целочисленные координаты трех вершин прямоугольника, стороны которого
// параллельны координатным осям. Найти координаты его четвертой вершины.
/*
let A = {
    OX: 1,
    OY: 4,
};
let B = {
    OX: 1,
    OY: 1,
};
let C = {
    OX: 3,
    OY: 1,
};
let D = {};

D.OX = Math.max(A.OX, B.OX, C.OX);
D.OY = Math.max(A.OY, B.OY, C.OY);

console.log(`x: ${D.OX}, y: ${D.OY}`);
*/

// 8. Дан номер года (положительное целое число). Определить количество дней в этом
// году, учитывая, что обычный год насчитывает 365 дней, а високосный — 366 дней.
// Високосным считается год, делящийся на 4, за исключением тех годов, которые
// делятся на 100 и не делятся на 400 (например, годы 300, 1300 и 1900 не являются
// високосными, а 1200 и 2000 — являются).
/*
let year = 2005;
if (year % 4 === 0) {
    if (year % 100 === 0 && year % 400 !== 0) {
        console.log(`В ${year} году 365 дней `);
    } else {
        console.log(`В ${year} году 366 дней `);
    }
} else {
    console.log(`В ${year} году 365 дней `);
}
*/

// 9. Дано целое число. Вывести его строку-описание вида «отрицательное четное число»,
// «нулевое число», «положительное нечетное число» и т. д.
/*
let num = 15;
if (num > 0) {
    if (num % 2 === 0) {
        alert(`Число ${num} - положительное четное число`);
    } else {
        alert(`Число ${num} - положительное нечетное число`);
    }
} else if (num < 0) {
    if (num % 2 === 0) {
        alert(`Число ${num} - отрицательное четное число`);
    } else {
        alert(`Число ${num} - отрицательное нечетное число`);
    }
} else {
    alert(`Число ${num} - нулевое число`);
}
*/

// 10. Дано целое число, лежащее в диапазоне 1–999. Вывести его строку- описание вида
// «четное двузначное число», «нечетное трехзначное число» и т. д.
/*
let num = 127;
if (num % 2 === 0) {
    if (num < 10) {
        alert(`${num} - четное однозначное число`);
    } else if (num < 100) {
        alert(`${num} - четное двузначное число`);
    } else if (num < 1000) {
        alert(`${num} - четное трехзначное число`);
    }
} else {
    if (num < 10) {
        alert(`${num} - нечетное однозначное число`);
    } else if (num < 100) {
        alert(`${num} - нечетное двузначное число`);
    } else if (num < 1000) {
        alert(`${num} - нечетное трехзначное число`);
    }
}
*/

// 11. Какие значения выведет цикл while?
// ОТВЕТ: Вывод будет отличаться, т.к. в первом варианте будет значение переменной сначала прибавляться на 1, а потом
// сравниваться и условии уже будет 1, во втором случае значение будет сначала сравниваться,
// а потом увеличиваться на 1. Alert будет выводить сначала 1 в обоих случаях.

// Префиксный вариант ++i:
/*
let i = 0;
while (++i < 5) alert( i ); // 1, 2, 3, 4
// Постфиксный вариант j++
let j = 0;
while (j++ < 5) alert( j ); // 1, 2, 3, 4, 5
*/

// 12. Какие значения выведет цикл for?
// ОТВЕТ: В двух циклах вывод будет одинаковый, т.к. действие инкримента и дискримента выполнится
// и там и там, а потом только будет выполняться сравнение.
/*
// Постфиксная форма:
for (let i = 0; i < 5; i++) alert( i ); // 0, 1, 2, 3, 4
// Префиксная форма:
for (let j = 0; j < 5; ++j) alert( j ); // 0, 1, 2, 3, 4
*/

// 13. Выведите чётные числа
// При помощи цикла for выведите чётные числа от 2 до 10.
/*
for (let i = 1; i < 11; i++) {
    if (i % 2 === 0) {
        console.log(i);
    }
}
*/

// 14. Замените for на while
// Перепишите код, заменив цикл for на while, без изменения поведения цикла.
/*
for (let i = 0; i < 3; i++) {
    alert( `number ${i}!` );
}
*/
/*
let i = 0;
while (i < 3) {
    alert( `number ${i}!` );
    i++;
}
*/

// 15. Повторять цикл, пока ввод неверен
/*
while (true) {
    let num = prompt('Введите число больше 100');
    if (num > 100) break;
        else if (num === null) break;
}
*/

// 16. Вывести простые числа
/*
let num = 2;
let even_num;
while (num < 10) {
    even_num = false;
    for (i = 2; i < num; i++) {
        if (num % i === 0) {
            even_num = true;
        }
    }
    if (even_num !== true) {
        console.log(num);
    }
    num++;
}
*/

// 17. Вычислить среднее арифметическое 2-ух чисел, введенных пользователем.
/*
let num1 = prompt('Введите первое число');
let num2 = prompt('Введите второе число');
alert(`Среднее арифметическое двух чисел ${num1} и ${num2}: ${(+num1 + +num2) / 2}`);
*/

// 18. Напишите скрипт, который вычислит квадрат любого введённого числа.
/*
let num = prompt('Введите число');
alert(`Квадрат числа ${num} равен: ${num * num}`);
*/

// 19. Примите от пользователя 3 числа. Выведите на экран разницу большего и меньшего из них.
/*
let num1 = prompt('Введите первое число');
let num2 = prompt('Введите второе число');
let num3 = prompt('Введите третье число');
let minNum = Math.min(+num1, +num2, +num3);
let maxNum = Math.max(+num1, +num2, +num3);
alert(`разница равна: ${maxNum - minNum}`);
*/

// 20. Напишите программу, проверяющую число, введенное с клавиатуры на четность.
/*
while (true) {
    let num = prompt('Введите число');
    if (num === null) break;
    alert(+num % 2 === 0 ? 'Четное число' : 'Нечетное число');
}
*/

// 21. Дано натуральное число а (a<100). Напишите программу, выводящую на экран
// количество цифр в этом числе и сумму этих цифр
/*
let a = 49;
let toStrA = String(a);
if (a < 100 && a >= 10) {
    alert(`Количество цифр в числе ${a}: 2. Сумма этих цифр: ${+toStrA[0] + +toStrA[1]}`);
} else if (a < 10) {
    alert('Однозначное число');
}
*/

// 22. Известно, что 1 дюйм равен 2.54 см. Разработать скрипт, переводящий дюймы в
// сантиметры и наоборот. Диалог с пользователем реализовать через браузер
/*
let toConvert = prompt('1) Введите цифру 1 для конвертации см -> дюймы\n2) Введите цифру 2 для конвертации дюймы -> см');
if (+toConvert === 1) {
    let num1 = prompt('Введите число в см');
    alert(`Результат: ${+num1 * 2.54} дюйма`);
} else if (+toConvert === 2) {
    let num2 = prompt('Введите число в дюймах');
    alert(`Результат: ${(+num2 / 2.54).toFixed(2)} дюйма`);
}
*/

// 23. Найти сумму или произведение цифр трехзначного числа
// Пользователь вводит через prompt трёхзначное число. Проверить трехзначное число
// на четность и найти сумму его цифр, если число четное, или произведение его цифр,
// если число нечетное.
/*
let num = prompt('Введите трёхзначное число');
if (num % 2 === 0) {
    alert(`Сумма цифр числа ${num}: ${+num[0] + +num[1] + +num[2]}`);
} else {
    alert(`Произведение цифр числа ${num}: ${num[0] * num[1] * num[2]}`);
}
*/

// 24. Определить существование треугольника по трем сторонам
/*
let A = prompt('Введите число первой стороны треугольника');
let B = prompt('Введите число второй стороны треугольника');
let C = prompt('Введите число третий стороны треугольника');
alert(`${(+A + +B) > +C && (+A + +C) > +B && (+C + +B) > +A ? 'Треугольнику быть :)' : 'Треугольник не получится'}`);
*/

// 25. Принадлежность точки окружности
// Даны координаты точки A(x = 4, y = 9) и радиус окружности (R = 10) с центром в начале
// координат.
// Напишите код, который будет выводить сообщение о том, лежит ли данная точка
// внутри окружности или за её пределами. Для извлечения квадратного корня из числа z
// вам понадобится метод Math.sqrt(z).
/*
let A = {
    OX: 4,
    OY: 9,
};
let R = 10;
alert(`${((Math.sqrt(A.OX) + Math.sqrt(A.OY))) <= Math.sqrt(R) ? 
    'Данная точка лежит внутри окружности' : 'Данная точка за пределами окружности'}`);
*/

// 26. Объекты
// Напишите код, выполнив задание из каждого пункта отдельной строкой:
// - Создайте пустой объект user.
// - Добавьте свойство name со значением John.
// - Добавьте свойство surname со значением Smith.
// - Измените значение свойства name на Pete.
// - Удалите свойство name из объекта.
/*
let user = {};
user.name = 'John';
user.surname = 'Smith';
user.name = 'Pete';
delete user.name;
*/

// 27. Объекты-константы
// Можно ли изменить объект, объявленный с помощью const?
/*
const user = {
    name: "John"
};
user.name = "Pete";
*/
// это будет работать?
// Ответ: Да, т.к. объект может быть изменен (из конспекта по уроку)

// 28. Сумма свойств объекта
// Есть объект, в котором хранятся зарплаты нашей команды
// Напишите код для суммирования всех зарплат и сохраните результат в переменной sum.
// Должно получиться 390.
// Если объект salaries пуст, то результат должен быть 0.
/*
let salaries = {
    John: 100,
    Ann: 160,
    Pete: 130
};
let sum = 0;
for (let key in salaries) {
    sum += salaries[key];
}
console.log(sum);
*/

// 29. Бесконечный цикл по ошибке
// Этот цикл – бесконечный. Он никогда не завершится, почему?
/*
let i = 0;
while (i != 10) {
    i += 0.2;
}
*/
// Ответ: Неточное соответствие при сложении чисел с плавающей точкой
// 9.999999999999996
// 10.199999999999996


// Bonus по Math.random()
/*
let from = 5;
let to = 10;
let randNum = Math.random();
randNum *= to;
if (randNum > from) {
    randNum = Math.round(randNum);
} else {
    randNum = Math.round(randNum) + from;
}
console.log(randNum);
*/
